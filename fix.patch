diff --git a/.gitignore b/.gitignore
index 4d1f654..57571a0 100644
--- a/.gitignore
+++ b/.gitignore
@@ -33,3 +33,5 @@ eclipse-*bin/
 .bazelversion
 # User-specific .bazelrc
 user.bazelrc
+# C++ Intellisense metadata file
+compile_commands.json
diff --git a/BUILD b/BUILD
deleted file mode 100644
index 4094c0b..0000000
--- a/BUILD
+++ /dev/null
@@ -1,8 +0,0 @@
-cc_binary(
-    name = "ogl",
-    srcs = ["ogl.cc"],
-    deps = [
-      "@glfw//:glfw",
-    ]
-)
-
diff --git a/MODULE.bazel b/MODULE.bazel
index 0df756f..b5e1031 100644
--- a/MODULE.bazel
+++ b/MODULE.bazel
@@ -4,5 +4,23 @@
 #
 # For more details, please check https://github.com/bazelbuild/bazel/issues/18958
 ###############################################################################
+module(
+    name = "ogl",
+    version = "1.0.0",
+)
 
+bazel_dep(name = "rules_apple", version = "3.9.2")
 bazel_dep(name = "apple_support", version = "1.17.0", repo_name = "build_bazel_apple_support")
+bazel_dep(name = "rules_cc", version = "0.0.10")
+
+# C++ Intellisense
+
+# Run `bazel run //:hedron_compile_commands` to generate compile_commands.json for clangd
+bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
+git_override(
+    module_name = "hedron_compile_commands",
+    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
+    commit = "1e08f8e0507b6b6b1f4416a9a22cf5c28beaba93",
+    # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
+    # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
+)
diff --git a/MODULE.bazel.lock b/MODULE.bazel.lock
index 646bc0c..2d7cb6e 100644
--- a/MODULE.bazel.lock
+++ b/MODULE.bazel.lock
@@ -5,42 +5,55 @@
     "https://bcr.bazel.build/modules/abseil-cpp/20210324.2/MODULE.bazel": "7cd0312e064fde87c8d1cd79ba06c876bd23630c83466e9500321be55c96ace2",
     "https://bcr.bazel.build/modules/abseil-cpp/20211102.0/MODULE.bazel": "70390338f7a5106231d20620712f7cccb659cd0e9d073d1991c038eb9fc57589",
     "https://bcr.bazel.build/modules/abseil-cpp/20211102.0/source.json": "7e3a9adf473e9af076ae485ed649d5641ad50ec5c11718103f34de03170d94ad",
+    "https://bcr.bazel.build/modules/apple_support/1.11.1/MODULE.bazel": "1843d7cd8a58369a444fc6000e7304425fba600ff641592161d9f15b179fb896",
+    "https://bcr.bazel.build/modules/apple_support/1.15.1/MODULE.bazel": "a0556fefca0b1bb2de8567b8827518f94db6a6e7e7d632b4c48dc5f865bc7c85",
     "https://bcr.bazel.build/modules/apple_support/1.17.0/MODULE.bazel": "340961c8c68c74af23aaf8334ec531e1619fd50fb961dbdeefa282bae84f56ff",
     "https://bcr.bazel.build/modules/apple_support/1.17.0/source.json": "13917e301141c02b5eb8a3aa922fc29f5f153953fb6c9b43998692a367dd1375",
     "https://bcr.bazel.build/modules/apple_support/1.5.0/MODULE.bazel": "50341a62efbc483e8a2a6aec30994a58749bd7b885e18dd96aa8c33031e558ef",
     "https://bcr.bazel.build/modules/bazel_features/1.10.0/MODULE.bazel": "f75e8807570484a99be90abcd52b5e1f390362c258bcb73106f4544957a48101",
     "https://bcr.bazel.build/modules/bazel_features/1.11.0/MODULE.bazel": "f9382337dd5a474c3b7d334c2f83e50b6eaedc284253334cf823044a26de03e8",
     "https://bcr.bazel.build/modules/bazel_features/1.11.0/source.json": "c9320aa53cd1c441d24bd6b716da087ad7e4ff0d9742a9884587596edfe53015",
+    "https://bcr.bazel.build/modules/bazel_features/1.3.0/MODULE.bazel": "cdcafe83ec318cda34e02948e81d790aab8df7a929cec6f6969f13a489ccecd9",
     "https://bcr.bazel.build/modules/bazel_skylib/1.0.3/MODULE.bazel": "bcb0fd896384802d1ad283b4e4eb4d718eebd8cb820b0a2c3a347fb971afd9d8",
     "https://bcr.bazel.build/modules/bazel_skylib/1.2.1/MODULE.bazel": "f35baf9da0efe45fa3da1696ae906eea3d615ad41e2e3def4aeb4e8bc0ef9a7a",
     "https://bcr.bazel.build/modules/bazel_skylib/1.3.0/MODULE.bazel": "20228b92868bf5cfc41bda7afc8a8ba2a543201851de39d990ec957b513579c5",
+    "https://bcr.bazel.build/modules/bazel_skylib/1.4.1/MODULE.bazel": "a0dcb779424be33100dcae821e9e27e4f2901d9dfd5333efe5ac6a8d7ab75e1d",
     "https://bcr.bazel.build/modules/bazel_skylib/1.5.0/MODULE.bazel": "32880f5e2945ce6a03d1fbd588e9198c0a959bb42297b2cfaf1685b7bc32e138",
     "https://bcr.bazel.build/modules/bazel_skylib/1.6.1/MODULE.bazel": "8fdee2dbaace6c252131c00e1de4b165dc65af02ea278476187765e1a617b917",
-    "https://bcr.bazel.build/modules/bazel_skylib/1.6.1/source.json": "082ed5f9837901fada8c68c2f3ddc958bb22b6d654f71dd73f3df30d45d4b749",
+    "https://bcr.bazel.build/modules/bazel_skylib/1.7.1/MODULE.bazel": "3120d80c5861aa616222ec015332e5f8d3171e062e3e804a2a0253e1be26e59b",
+    "https://bcr.bazel.build/modules/bazel_skylib/1.7.1/source.json": "f121b43eeefc7c29efbd51b83d08631e2347297c95aac9764a701f2a6a2bb953",
     "https://bcr.bazel.build/modules/buildozer/7.1.2/MODULE.bazel": "2e8dd40ede9c454042645fd8d8d0cd1527966aa5c919de86661e62953cd73d84",
     "https://bcr.bazel.build/modules/buildozer/7.1.2/source.json": "c9028a501d2db85793a6996205c8de120944f50a0d570438fcae0457a5f9d1f8",
     "https://bcr.bazel.build/modules/googletest/1.11.0/MODULE.bazel": "3a83f095183f66345ca86aa13c58b59f9f94a2f81999c093d4eeaa2d262d12f4",
     "https://bcr.bazel.build/modules/googletest/1.11.0/source.json": "c73d9ef4268c91bd0c1cd88f1f9dfa08e814b1dbe89b5f594a9f08ba0244d206",
+    "https://bcr.bazel.build/modules/nlohmann_json/3.6.1/MODULE.bazel": "6f7b417dcc794d9add9e556673ad25cb3ba835224290f4f848f8e2db1e1fca74",
+    "https://bcr.bazel.build/modules/nlohmann_json/3.6.1/source.json": "f448c6e8963fdfa7eb831457df83ad63d3d6355018f6574fb017e8169deb43a9",
+    "https://bcr.bazel.build/modules/platforms/0.0.10/MODULE.bazel": "8cb8efaf200bdeb2150d93e162c40f388529a25852b332cec879373771e48ed5",
+    "https://bcr.bazel.build/modules/platforms/0.0.10/source.json": "f22828ff4cf021a6b577f1bf6341cb9dcd7965092a439f64fc1bb3b7a5ae4bd5",
     "https://bcr.bazel.build/modules/platforms/0.0.4/MODULE.bazel": "9b328e31ee156f53f3c416a64f8491f7eb731742655a47c9eec4703a71644aee",
     "https://bcr.bazel.build/modules/platforms/0.0.5/MODULE.bazel": "5733b54ea419d5eaf7997054bb55f6a1d0b5ff8aedf0176fef9eea44f3acda37",
     "https://bcr.bazel.build/modules/platforms/0.0.6/MODULE.bazel": "ad6eeef431dc52aefd2d77ed20a4b353f8ebf0f4ecdd26a807d2da5aa8cd0615",
     "https://bcr.bazel.build/modules/platforms/0.0.7/MODULE.bazel": "72fd4a0ede9ee5c021f6a8dd92b503e089f46c227ba2813ff183b71616034814",
     "https://bcr.bazel.build/modules/platforms/0.0.9/MODULE.bazel": "4a87a60c927b56ddd67db50c89acaa62f4ce2a1d2149ccb63ffd871d5ce29ebc",
-    "https://bcr.bazel.build/modules/platforms/0.0.9/source.json": "cd74d854bf16a9e002fb2ca7b1a421f4403cda29f824a765acd3a8c56f8d43e6",
     "https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel": "a5a29bb89544f9b97edce05642fac225a808b5b7be74038ea3640fae2f8e66a7",
     "https://bcr.bazel.build/modules/protobuf/21.7/source.json": "bbe500720421e582ff2d18b0802464205138c06056f443184de39fbb8187b09b",
     "https://bcr.bazel.build/modules/protobuf/3.19.0/MODULE.bazel": "6b5fbb433f760a99a22b18b6850ed5784ef0e9928a72668b66e4d7ccd47db9b0",
     "https://bcr.bazel.build/modules/protobuf/3.19.6/MODULE.bazel": "9233edc5e1f2ee276a60de3eaa47ac4132302ef9643238f23128fea53ea12858",
+    "https://bcr.bazel.build/modules/rules_apple/3.9.2/MODULE.bazel": "520425899b5e2e197b28d97d831cd099f18fdef9d983de64ddb0bfb6afe9aebc",
+    "https://bcr.bazel.build/modules/rules_apple/3.9.2/source.json": "e33ba34a07d2b50eef69223f6c0433fa712927ca396eec8f13d12aec3a9adbe6",
     "https://bcr.bazel.build/modules/rules_cc/0.0.1/MODULE.bazel": "cb2aa0747f84c6c3a78dad4e2049c154f08ab9d166b1273835a8174940365647",
+    "https://bcr.bazel.build/modules/rules_cc/0.0.10/MODULE.bazel": "ec1705118f7eaedd6e118508d3d26deba2a4e76476ada7e0e3965211be012002",
+    "https://bcr.bazel.build/modules/rules_cc/0.0.10/source.json": "90310b16e0e7df0cf40f8d1dccd7d373360f42419a6bfbbf5bb013182dd70e84",
     "https://bcr.bazel.build/modules/rules_cc/0.0.2/MODULE.bazel": "6915987c90970493ab97393024c156ea8fb9f3bea953b2f3ec05c34f19b5695c",
     "https://bcr.bazel.build/modules/rules_cc/0.0.8/MODULE.bazel": "964c85c82cfeb6f3855e6a07054fdb159aced38e99a5eecf7bce9d53990afa3e",
     "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel": "836e76439f354b89afe6a911a7adf59a6b2518fafb174483ad78a2a2fde7b1c5",
-    "https://bcr.bazel.build/modules/rules_cc/0.0.9/source.json": "1f1ba6fea244b616de4a554a0f4983c91a9301640c8fe0dd1d410254115c8430",
     "https://bcr.bazel.build/modules/rules_java/4.0.0/MODULE.bazel": "5a78a7ae82cd1a33cef56dc578c7d2a46ed0dca12643ee45edbb8417899e6f74",
+    "https://bcr.bazel.build/modules/rules_java/7.6.1/MODULE.bazel": "2f14b7e8a1aa2f67ae92bc69d1ec0fa8d9f827c4e17ff5e5f02e91caa3b2d0fe",
     "https://bcr.bazel.build/modules/rules_java/7.6.5/MODULE.bazel": "481164be5e02e4cab6e77a36927683263be56b7e36fef918b458d7a8a1ebadb1",
     "https://bcr.bazel.build/modules/rules_java/7.6.5/source.json": "a805b889531d1690e3c72a7a7e47a870d00323186a9904b36af83aa3d053ee8d",
     "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel": "a56b85e418c83eb1839819f0b515c431010160383306d13ec21959ac412d2fe7",
-    "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/source.json": "a075731e1b46bc8425098512d038d416e966ab19684a10a34f4741295642fc35",
+    "https://bcr.bazel.build/modules/rules_jvm_external/5.2/MODULE.bazel": "d9351ba35217ad0de03816ef3ed63f89d411349353077348a45348b096615036",
+    "https://bcr.bazel.build/modules/rules_jvm_external/5.2/source.json": "10572111995bc349ce31c78f74b3c147f6b3233975c7fa5eff9211f6db0d34d9",
     "https://bcr.bazel.build/modules/rules_license/0.0.3/MODULE.bazel": "627e9ab0247f7d1e05736b59dbb1b6871373de5ad31c3011880b4133cafd4bd0",
     "https://bcr.bazel.build/modules/rules_license/0.0.7/MODULE.bazel": "088fbeb0b6a419005b89cf93fe62d9517c0a2b8bb56af3244af65ecfe37e7d5d",
     "https://bcr.bazel.build/modules/rules_license/0.0.7/source.json": "355cc5737a0f294e560d52b1b7a6492d4fff2caf0bef1a315df5a298fca2d34a",
@@ -53,8 +66,15 @@
     "https://bcr.bazel.build/modules/rules_python/0.22.1/MODULE.bazel": "26114f0c0b5e93018c0c066d6673f1a2c3737c7e90af95eff30cfee38d0bbac7",
     "https://bcr.bazel.build/modules/rules_python/0.22.1/source.json": "57226905e783bae7c37c2dd662be078728e48fa28ee4324a7eabcafb5a43d014",
     "https://bcr.bazel.build/modules/rules_python/0.4.0/MODULE.bazel": "9208ee05fd48bf09ac60ed269791cf17fb343db56c8226a720fbb1cdf467166c",
+    "https://bcr.bazel.build/modules/rules_swift/1.16.0/MODULE.bazel": "4a09f199545a60d09895e8281362b1ff3bb08bbde69c6fc87aff5b92fcc916ca",
+    "https://bcr.bazel.build/modules/rules_swift/2.1.1/MODULE.bazel": "494900a80f944fc7aa61500c2073d9729dff0b764f0e89b824eb746959bc1046",
+    "https://bcr.bazel.build/modules/rules_swift/2.1.1/source.json": "40fc69dfaac64deddbb75bd99cdac55f4427d9ca0afbe408576a65428427a186",
     "https://bcr.bazel.build/modules/stardoc/0.5.1/MODULE.bazel": "1a05d92974d0c122f5ccf09291442580317cdd859f07a8655f1db9a60374f9f8",
-    "https://bcr.bazel.build/modules/stardoc/0.5.1/source.json": "a96f95e02123320aa015b956f29c00cb818fa891ef823d55148e1a362caacf29",
+    "https://bcr.bazel.build/modules/stardoc/0.5.3/MODULE.bazel": "c7f6948dae6999bf0db32c1858ae345f112cacf98f174c7a8bb707e41b974f1c",
+    "https://bcr.bazel.build/modules/stardoc/0.7.0/MODULE.bazel": "05e3d6d30c099b6770e97da986c53bd31844d7f13d41412480ea265ac9e8079c",
+    "https://bcr.bazel.build/modules/stardoc/0.7.0/source.json": "e3c524bf2ef20992539ce2bc4a2243f4853130209ee831689983e28d05769099",
+    "https://bcr.bazel.build/modules/swift_argument_parser/1.3.1.1/MODULE.bazel": "5e463fbfba7b1701d957555ed45097d7f984211330106ccd1352c6e0af0dcf91",
+    "https://bcr.bazel.build/modules/swift_argument_parser/1.3.1.1/source.json": "32bd87e5f4d7acc57c5b2ff7c325ae3061d5e242c0c4c214ae87e0f1c13e54cb",
     "https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/MODULE.bazel": "7298990c00040a0e2f121f6c32544bab27d4452f80d9ce51349b1a28f3005c43",
     "https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/source.json": "f1ef7d3f9e0e26d4b23d1c39b5f5de71f584dd7d1b4ef83d9bbba6ec7a6a6459",
     "https://bcr.bazel.build/modules/zlib/1.2.11/MODULE.bazel": "07b389abc85fdbca459b69e2ec656ae5622873af3f845e1c9d80fe179f3effa0",
@@ -67,7 +87,7 @@
     "@@apple_support~//crosstool:setup.bzl%apple_cc_configure_extension": {
       "general": {
         "bzlTransitiveDigest": "7ii+gFxWSxHhQPrBxfMEHhtrGvHmBTvsh+KOyGunP/s=",
-        "usagesDigest": "1WAZYB4l4e6H6oA/J4sUcra9YA+P7XleDo71Pzb3KK8=",
+        "usagesDigest": "JdUL+qL36JIn/5t5qS2DNb6vTZykvMFWl1o004IivyU=",
         "recordedFileInputs": {},
         "recordedDirentsInputs": {},
         "envVariables": {},
@@ -95,7 +115,7 @@
     "@@platforms//host:extension.bzl%host_platform": {
       "general": {
         "bzlTransitiveDigest": "xelQcPZH8+tmuOHVjL9vDxMnnQNMlwj0SlvgoqBkm4U=",
-        "usagesDigest": "meSzxn3DUCcYEhq4HQwExWkWtU4EjriRBQLsZN+Q0SU=",
+        "usagesDigest": "V1R2Y2oMxKNfx2WCWpSCaUV1WefW1o8HZGm3v1vHgY4=",
         "recordedFileInputs": {},
         "recordedDirentsInputs": {},
         "envVariables": {},
diff --git a/WORKSPACE b/WORKSPACE
deleted file mode 100644
index a9e4fc5..0000000
--- a/WORKSPACE
+++ /dev/null
@@ -1,28 +0,0 @@
-workspace(
-  name = "learn-opengl"
-)
-
-# Load the bazel HTTP and GIT tools.
-load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
-load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
-load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")
-
-
-# Apple Support
-git_repository(
-    name = "build_bazel_rules_apple",
-    remote = "https://github.com/bazelbuild/rules_apple.git",
-    tag = "0.19.0",
-)
-git_repository(
-    name = "build_bazel_apple_support",
-    remote = "https://github.com/bazelbuild/apple_support.git",
-    tag = "0.7.2",
-)
-
-new_git_repository(
-    name = "glfw",
-    remote = "https://github.com/glfw/glfw.git",
-    commit = "b35641f4a3c62aa86a0b3c983d163bc0fe36026d",
-    build_file = "//:third_party/glfw.BUILD",
-)
diff --git a/ogl.cc b/ogl.cc
index 41854d0..ad4aae0 100644
--- a/ogl.cc
+++ b/ogl.cc
@@ -13,5 +13,5 @@ int main(int argc, char **argv) {
   glfwDestroyWindow(window);
   glfwTerminate();
 
-  return EXIT_SUCCESS;
+  return 0;
 }
diff --git a/third_party/glfw.BUILD b/third_party/glfw.BUILD
deleted file mode 100644
index 809129a..0000000
--- a/third_party/glfw.BUILD
+++ /dev/null
@@ -1,163 +0,0 @@
-load("@rules_cc//cc:defs.bzl", "cc_library", "objc_library")
-
-# ===== win32 =====
-
-WIN32_DEFINES = [
-    "_GLFW_WIN32",
-]
-
-WIN32_HDRS = [
-    "src/win32_joystick.h",
-    "src/win32_platform.h",
-    "src/wgl_context.h",
-]
-
-WIN32_SRCS = [
-    "src/win32_init.c",
-    "src/win32_joystick.c",
-    "src/win32_monitor.c",
-    "src/win32_thread.c",
-    "src/win32_time.c",
-    "src/win32_window.c",
-    "src/wgl_context.c",
-]
-
-WIN32_LINKOPTS = [
-    "-DEFAULTLIB:user32.lib",
-    "-DEFAULTLIB:gdi32.lib",
-    "-DEFAULTLIB:shell32.lib",
-]
-
-# ===== linux =====
-
-LINUX_DEFINES = [
-    "_GLFW_HAS_XF86VM",
-    "_GLFW_X11",
-]
-
-LINUX_HDRS = [
-    "src/glx_context.h",
-    "src/linux_joystick.h",
-    "src/posix_thread.h",
-    "src/posix_time.h",
-    "src/x11_platform.h",
-]
-
-LINUX_SRCS = [
-    "src/glx_context.c",
-    "src/linux_joystick.c",
-    "src/posix_thread.c",
-    "src/posix_time.c",
-    "src/x11_init.c",
-    "src/x11_monitor.c",
-    "src/x11_window.c",
-]
-
-LINUX_LINKOPTS = []
-
-# ===== darwin =====
-
-DARWIN_DEFINES = [
-    "_GLFW_COCOA",
-    "_GLFW_NSGL",
-    "_GLFW_NO_DLOAD_WINMM",
-    "_GLFW_USE_OPENGL",
-]
-
-DARWIN_HDRS = [
-    "src/cocoa_joystick.h",
-    "src/cocoa_platform.h",
-    "src/glx_context.h",
-    "src/nsgl_context.h",
-    "src/null_joystick.h",
-    "src/null_platform.h",
-    "src/posix_thread.h",
-    "src/wl_platform.h",
-]
-
-DARWIN_SRCS = [
-    "src/cocoa_time.c",
-    "src/posix_thread.c",
-    "src/cocoa_init.m",
-    "src/cocoa_joystick.m",
-    "src/cocoa_monitor.m",
-    "src/cocoa_window.m",
-    "src/nsgl_context.m",
-]
-
-DARWIN_LINKOPTS = [
-    "GLFW",
-    "-framework OpenGL",
-    "-framework Cocoa",
-    "-framework IOKit",
-    "-framework CoreFoundation",
-]
-
-# ===== common =====
-
-COMMON_HDRS = [
-    "include/GLFW/glfw3.h",
-    "include/GLFW/glfw3native.h",
-    "src/egl_context.h",
-    "src/internal.h",
-    "src/osmesa_context.h",
-    "src/mappings.h",
-    "src/xkb_unicode.h",
-]
-
-COMMON_SRCS = [
-    "src/context.c",
-    "src/egl_context.c",
-    "src/init.c",
-    "src/input.c",
-    "src/osmesa_context.c",
-    "src/monitor.c",
-    "src/vulkan.c",
-    "src/window.c",
-    "src/xkb_unicode.c",
-]
-
-cc_library(
-    name = "glfw_src",
-    srcs = COMMON_SRCS + select({
-        "@bazel_tools//src/conditions:windows": WIN32_SRCS,
-        "@bazel_tools//src/conditions:linux_x86_64": LINUX_SRCS,
-    }),
-    hdrs = COMMON_HDRS + select({
-        "@bazel_tools//src/conditions:windows": WIN32_HDRS,
-        "@bazel_tools//src/conditions:linux_x86_64": LINUX_HDRS,
-    }),
-    defines = select({
-        "@bazel_tools//src/conditions:windows": WIN32_DEFINES,
-        "@bazel_tools//src/conditions:linux_x86_64": LINUX_DEFINES,
-    }),
-)
-
-objc_library(
-    name = "glfw_src_darwin",
-    srcs = COMMON_SRCS + DARWIN_SRCS,
-    hdrs = COMMON_HDRS + DARWIN_HDRS,
-    copts = ["-fno-objc-arc"],
-    defines = DARWIN_DEFINES,
-)
-
-cc_library(
-    name = "glfw",
-    hdrs = [
-        "include/GLFW/glfw3.h",
-        "include/GLFW/glfw3native.h",
-    ],
-    linkopts = select({
-        "@bazel_tools//src/conditions:windows": WIN32_LINKOPTS,
-        "@bazel_tools//src/conditions:linux_x86_64": LINUX_LINKOPTS,
-        "@bazel_tools//src/conditions:darwin": DARWIN_LINKOPTS,
-    }),
-    strip_include_prefix = "include",
-    visibility = ["//visibility:public"],
-    deps = select({
-        "@bazel_tools//src/conditions:windows": [":glfw_src"],
-        "@bazel_tools//src/conditions:linux_x86_64": [":glfw_src"],
-        "@bazel_tools//src/conditions:darwin": [":glfw_src_darwin"],
-    }),
-)
-
